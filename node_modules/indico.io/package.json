{
  "_args": [
    [
      {
        "raw": "indico.io",
        "scope": null,
        "escapedName": "indico.io",
        "name": "indico.io",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/copperstick6/Documents/Github/2018/hackgt"
    ]
  ],
  "_from": "indico.io@latest",
  "_id": "indico.io@0.10.5",
  "_inCache": true,
  "_location": "/indico.io",
  "_nodeVersion": "4.2.6",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/indico.io-0.10.5.tgz_1476890175866_0.4004846950992942"
  },
  "_npmUser": {
    "name": "indicodatasolutions",
    "email": "contact@indico.io"
  },
  "_npmVersion": "2.14.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "indico.io",
    "scope": null,
    "escapedName": "indico.io",
    "name": "indico.io",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/indico.io/-/indico.io-0.10.5.tgz",
  "_shasum": "f301d04bde51d8204fd1a15a424e69e7e59a6937",
  "_shrinkwrap": null,
  "_spec": "indico.io",
  "_where": "/Users/copperstick6/Documents/Github/2018/hackgt",
  "author": {
    "name": "Joseph Núñez",
    "email": "toctochello@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/IndicoDataSolutions/IndicoIo-node/issues"
  },
  "contributors": [
    {
      "name": "Madison May",
      "email": "madison@indico.io"
    },
    {
      "name": "Chris Lee",
      "email": "chris@indico.io"
    },
    {
      "name": "Aidan McLaughlin"
    }
  ],
  "dependencies": {
    "bluebird": "^2.9.24",
    "config-ini": "^0.2.2",
    "expand-tilde": "^1.2.0",
    "file-type": "^2.11.0",
    "lwip": "^0.0.9",
    "request": "^2.36.0",
    "valid-url": "^1.0.9"
  },
  "description": "A Node.js wrapper for the Indico’s API",
  "devDependencies": {
    "chai": "1.9.1",
    "mocha": "~1.17.0",
    "should": "~3.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "f301d04bde51d8204fd1a15a424e69e7e59a6937",
    "tarball": "https://registry.npmjs.org/indico.io/-/indico.io-0.10.5.tgz"
  },
  "homepage": "https://github.com/IndicoDataSolutions/IndicoIo-node",
  "js-flags": "--harmony",
  "keywords": [],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/IndicoDataSolutions/IndicoIo-node/blob/master/LICENSE"
    }
  ],
  "main": "./lib/indico",
  "maintainers": [
    {
      "name": "slatervictoroff",
      "email": "slater@indico.io"
    },
    {
      "name": "madisonmay",
      "email": "madison@indico.io"
    },
    {
      "name": "indicodatasolutions",
      "email": "contact@indico.io"
    }
  ],
  "name": "indico.io",
  "optionalDependencies": {
    "lwip": "^0.0.9"
  },
  "readme": "# indico.io\n\nA node.js wrapper for the [indico API](http://indico.io).\n\n### Installation\n\nInstall with [npm](http://npmjs.org/)\n\n```\nnpm install indico.io\n```\n\nAPI Keys + Setup\n----------------\nFor API key registration and setup, checkout our [quickstart guide](https://indico.io/docs#quickstart).\n\n### Supported APIs\n\n#### Text\n- Sentiment Analysis\n- Text Tagging\n- Political Analysis\n- Language Detection\n- Keyword Detection\n- Twitter Virality\n- Intersectional Analysis\n- Multi-API Analysis\n\n#### Image\n- Facial Emotion Recognition\n- Image Feature Extraction\n- Facial Feature Extraction\n- Face Localization\n- Content Filtering\n- Image Recognition\n- Multi-API Analysis\n\n#### Custom Collections\n- Train on your own data and make customized predictions\n\nFull Documentation\n------------\nDetailed documentation and further code examples are available at [indico.reame.io](https://indico.io/docs).\n\n\n### Examples\n\n```javascript\nvar indico = require('indico.io');\n\n// Be sure to set your API key\nindico.apiKey = \"YOUR_API_KEY\";\n\n// Calls to the API return promises\n\nindico\n  .political('Guns don\\'t kill people. People kill people.')\n  .then(function(res){\n    console.log(res); // { Libertarian: 0.47740164630834825, Liberal: 0.16617097211030055, Green: 0.08454409540443657, Conservative: 0.2718832861769146}\n  })\n  .catch(function(err){\n    console.log('err: ', err);\n  })\n  .then(indico.sentiment)\n\nindico\n  .sentiment('Worst movie ever.')\n  .then(function(){\n      console.log(res); // {Sentiment: 0.07062467665597527}\n    })\n    .catch(function(err){\n      console.log('err: ', err);\n    })\n\nindico\n  .sentiment('Really enjoyed the movie.')\n    .then(function(){\n      console.log(res); // {Sentiment: 0.8105182526856075}\n    })\n    .catch(function(err){\n      console.log('err: ', err);\n    })\n\n\nindico\n  .language('Quis custodiet ipsos custodes')\n  .then(function(){\n    console.log(res); // {u'Swedish': 0.00033330636691921914, u'Lithuanian': 0.007328693814717631, u'Vietnamese': 0.0002686116137658802, u'Romanian': 8.133913804076592e-06, u'Dutch': 0.09380619821813883, u'Korean': 0.00272046505489883, u'Danish': 0.0012556466207667206, u'Indonesian': 6.623391878530033e-07, u'Latin': 0.8230599921384231, u'Hungarian': 0.0012793617391960567, u'Persian (Farsi)': 0.0019848504383980473, u'Turkish': 0.0004606965429738638, u'French': 0.00016792646226101638, u'Norwegian': 0.0009179030069742254, u'Russian': 0.0002643396088456642, u'Thai': 7.746466749651003e-05, u'Finnish': 0.0026367338676522643, u'Spanish': 0.011844579596827902, u'Bulgarian': 3.746416283126873e-05, u'Greek': 0.027456554742563633, u'Tagalog': 0.0005143018200605518, u'English': 0.00013517846159760138, u'Esperanto': 0.0002599482830232367, u'Italian': 2.650711180999111e-06, u'Portuguese': 0.013193681336032896, u'Chinese': 0.008818957727120736, u'German': 0.00011732494215411359, u'Japanese': 0.0005885208894664065, u'Czech': 9.916434007248934e-05, u'Slovak': 8.869445598583308e-05, u'Hebrew': 3.70933525938127e-05, u'Polish': 9.900290296255447e-05, u'Arabic': 0.00013589586110619373}\n  .texttags(\"This coconut green tea is amazing.\"); // {u'food': 0.3713687833244494, u'cars': 0.0037924017632370586, ...}\n  })\n  .catch(function(err){\n    console.log('err: ', err);\n  })\n\n\n/*\n  testImage is a b64 encoded image (PNG or JPG)\n*/\n\nindico\n  .imageFeatures(testImage)\n  .then(function(){\n    console.log(res); // [0.0, -0.02568680526917187, ... , 3.0342637531932777]\n  })\n  .catch(function(err){\n    console.log('err: ', err);\n  })\n\nindico\n  .fer(testImage)\n  .then(function(){\n    console.log(res); // {Angry: 0.08843749137458341, Sad: 0.39091163159204684, Neutral: 0.1947947999669361, Surprise: 0.03443785859010413, Fear: 0.17574534848440568, Happy: 0.11567286999192382}\n  })\n  .catch(function(err){\n    console.log('err: ', err);\n  });\n\n```\n\n###Batch\n\nBatch requests allow you to process larger volumes of data more efficiently by grouping many examples into a single request.  Simply call the batch method that corresponds to the API you'd like to use, and ensure your data is wrapped in an array.\n\n```javascript\nvar indico = require('indico.io')\n\nindico\n  .batchSentiment(['Worst movie ever.', 'Best movie ever.'])\n  .then(function(res){\n    console.log(res) // [ 0.07808824238341827, 0.813400530597089 ]\n  })\n  .catch(function(err){\n    console.log('err: ', err);\n  })\n\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/IndicoDataSolutions/IndicoIo-node.git"
  },
  "scripts": {
    "test": "mocha test/*.js test/integration/*.js"
  },
  "version": "0.10.5"
}
